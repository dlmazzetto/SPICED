version: '3'

# Everything below services will be a separate container
services:
  # use logging.critical() instead of print()
  # ports
  # environment variables
  # shared volumes

  # Which containers do we want to have in this weeks project?

  # 1. Container in our pipeline
  tweets:
    build: tweets/
    # Link the tweets directory (from local machine) with the working directory
    # in the container (/app from Dockerfile) --> The two directories will automatically be synchronized
    volumes:
       - ./tweets/:/app
    # depends_on makes sure that the container mongodb is started before the container tweets is.
    # It does not guarantee that the container mongodb is ready to accept connections before the
    # tweets container wants to connect to mongodb
    depends_on:
      - mongodb


  # 2. Container in our pipeline
  mongodb:
    image: mongo
    # port mapping LOCAL:CONTAINER
    ports:
      - 27018:27017
    # container_name: "mongo"


  # 3. Container in our pipeline
  etl:
    build: etl/
    volumes:
       - ./etl/:/app
    depends_on:
      - mongodb
      - postgresdb
    # if restart is set to always your container will always restart if it is closed
    # due to an error
    restart: "always"


  # 4. Container in our pipeline
  postgresdb:
    # image indicates that there is a predefined image that we want to use
    # Someone already uploaded this image to docker-hub
    image: postgres
    # port mapping LOCAL:CONTAINER
    ports:
    - 5555:5432
    environment:
    - POSTGRES_PASSWORD=1234
    # psql -h 0.0.0.0 -p 5555 -U postgres postgres


  # # 1. Container
  # fruit:
  #   # prints a random fruit every 10 seconds
  #   # build indicates that we want to build an image according to a Dockerfile
  #   # inside the specified folder (fruit) and run a container with this image
  #   build: fruit/
  #   depends_on:
  #   - postgresdb
  #
  # spices:
  #   # prints a random spice every 10 seconds
  #   build: spices/
  #   volumes:
  #   - ./spices/:/app
  #   #command:
  #   #- ["python", "random_spice.py"]
